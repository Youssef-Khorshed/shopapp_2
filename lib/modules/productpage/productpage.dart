import 'package:flutter/material.dart';
import 'package:flutter_rating_bar/flutter_rating_bar.dart';
import 'package:provider/provider.dart';
import 'package:tst_new2/model/users/usersmodel.dart';
import 'package:tst_new2/modules/HomePage/bottomnavigationscreens/screen3.dart';
import 'package:tst_new2/modules/HomePage/homepage.dart';
import 'package:tst_new2/shared/component/Button.dart';
import 'package:tst_new2/shared/component/navigation.dart';

import '../../provider.dart';

class Productpage extends StatelessWidget {
  Autogenerated item;
  TextEditingController controller = TextEditingController();

  Productpage({required Autogenerated this.item});

  @override
  Widget build(BuildContext context) {
    double height = MediaQuery
        .of(context)
        .size
        .height;
    double width = MediaQuery
        .of(context)
        .size
        .width;
    return Consumer<Model>(
      builder: (context, model, child) {
        return Scaffold(
            backgroundColor: Color(0xFFFFFFFF),
            appBar: AppBar(
              elevation: 0.0,
              backgroundColor: Color(0xFF030A2F),
            ),
            body: SingleChildScrollView(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                  Container(
                  color: Color(0xFF030A2F),
              child: Container(
                  padding: EdgeInsets.all(15),
                  width: width,
                  decoration: BoxDecoration(
                      color: Color(0xFFFFFFFF),
                      borderRadius:
                      BorderRadius.only(topRight: Radius.circular(50))),
                  clipBehavior: Clip.antiAliasWithSaveLayer,
                  child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                  Image(image: NetworkImage(item.image)),
              SizedBox(
                height: 5,
              ),
              Row(
                children: [
                  RatingBar.builder(
                    initialRating: item.rating.rate.toDouble(),
                    minRating: 1,
                    direction: Axis.horizontal,
                    allowHalfRating: true,
                    itemCount: 5,
                    itemPadding:
                    EdgeInsets.symmetric(horizontal: 4.0),
                    itemBuilder: (context, _) =>
                        Icon(
                          Icons.star,
                          size: 10,
                          color: Colors.amber,
                        ),
                    onRatingUpdate: (rating) {},
                    ignoreGestures: true,
                  ),
                  Spacer(),
                  CircleAvatar(
                    backgroundColor: Colors.blueGrey,
                    child: IconButton(
                      icon: Icon(item.in_fav
                          ? Icons.favorite
                          : Icons.favorite_outline),
                      onPressed: () {
                        item.in_fav
                            ? model.removefav(item)
                            : model.addfav(item);
                      },
                    ),
                  ),
                ],
              ),
              SizedBox(
                height: 5,
              ),
              Row(
                children: [
                  DefaultButton(controll: () {
                    model.inc_quantity(item);
                  },radius: 30,width: width * 0.1, text: '+')
                  , Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 10.0),
                    child: Text('${item.qunatity}'),
                  )
                  , DefaultButton(controll: () {
                    model.dec_quantity(item);
                  },width: width * 0.1,radius: 30, text: '-')
                  ,Spacer()
                  , DefaultButton(
                       controll: () {
                         item.in_cart ? model.removecart(item) : model
                             .addcart(item);
                       },
                       text: item.in_cart
                           ? 'Remove from cart'
                           : 'Add to cart',
                       width: width * 0.3,
                       radius: 20)

                ],
              )
             , SizedBox(
              height: 5,
            ),
             Text('${item.title}'),
        SizedBox(
        height: 5,
        ),
        Text('${item.description}'),
        SizedBox(
        height: 5,
        ),
        Text('Price ${item.price}'),
        ],
        ),
        ),
        ),
        ],
        ),
        )
        ,
        );
      },
    );
  }
}
